
if !Vagrant.has_plugin?("vagrant-hostmanager")
  system("vagrant plugin install vagrant-hostmanager")
  abort "Installed the vagrant-hostmanager plugin.\nPlease run the \"vagrant up\" command again."
end

Vagrant.configure(2) do |config|
    config.ssh.forward_agent             = true
    config.vm.box                        = "magehost/xenial-apache-php7"
    config.vm.box_url                    = "http://vagrant.magehost.pro/catalog.json"
    config.vm.provider "parallels" do |prl,override|
        override.vm.synced_folder            "magento1", "/data/vhosts/magehostdev.pro/magento1", create: true
        override.vm.synced_folder            "magento2", "/data/vhosts/magehostdev.pro/magento2", create: true
        override.vm.synced_folder            "backup",   "/data/vhosts/magehostdev.pro/backup",   create: true
        prl.update_guest_tools          = true
        prl.linked_clone                = true
    end
    config.vm.provider "virtualbox" do |vb,override|
        override.vm.synced_folder            "magento1", "/data/vhosts/magehostdev.pro/magento1", create: true, type: "nfs"
        override.vm.synced_folder            "magento2", "/data/vhosts/magehostdev.pro/magento2", create: true, type: "nfs"
        override.vm.synced_folder            "backup",   "/data/vhosts/magehostdev.pro/backup",   create: true, type: "nfs"
    end
    config.vm.provider "vmware" do |vmware,override|
        override.vm.synced_folder            "magento1", "/data/vhosts/magehostdev.pro/magento1", create: true, type: "nfs"
        override.vm.synced_folder            "magento2", "/data/vhosts/magehostdev.pro/magento2", create: true, type: "nfs"
        override.vm.synced_folder            "backup",   "/data/vhosts/magehostdev.pro/backup",   create: true, type: "nfs"
    end
    config.vm.provision                  "shell", inline: "/bin/bash /root/bin/provision.sh"
    config.vm.hostname                   = "magehostdev.pro"
    config.vm.network                    "private_network", type: "dhcp"
    config.vm.define "dev" do |node|
    end
    if Vagrant.has_plugin?("vagrant-hostmanager")
        config.hostmanager.enabled           = true
        config.hostmanager.manage_host       = true
        config.hostmanager.ignore_private_ip = false
        config.hostmanager.include_offline   = true
        config.hostmanager.aliases           = %w(www.magehostdev.pro)
        config.hostmanager.ip_resolver = proc do |vm, resolving_vm|
            if hostname = (vm.ssh_info && vm.ssh_info[:host])
                `vagrant ssh -c "/usr/local/bin/get_local_ip.sh eth1"`
            end
        end
    end
    config.push.define "ftp" do |push|
        push.secure                      = true
        push.host                        = "vagrant.magehost.pro:2222"
        push.username                    = "vagrant"
        push.destination                 = "httpdocs"
        push.dir                         = "pub"
        push.exclude                     = "*~"
        push.exclude                     = ".*"
    end
end
